도로명주소 메인페이지 풀이
https://www.juso.go.kr/openIndexPage.do
-----------------------------------


전체 화면 구조 =>
모든 html 레이아웃 구성요소는
가로 100% 폭을 갖고 있음

1. html 레이아웃 구조
2. css 레이아웃 적용


---------------------------------

div#searchBG에서 사용하는
배경이미지 원본크기 =>
                  2055 * 710
50% 50% => 1028 * 356


[07.01. (목) 학습일정]
1. 도로명 주소 메인페이지
2. Slideshow(슬라이드쇼) 구현


[시험전 할 일]
1. 교무팀 또는 훈련교사에게 고지
   (가급적 하루전)
2. 응시장에서 응시확인서 발급 후 제출
   (직인 또는 감독관 서명)
=> 조퇴, 지각, 외출, 결석이
     모두 공결처리되고 출석으로 인정됨

웹디자인 기능사, 컬러리스트, 
정보처리기사(산업기사, 기능사), ...


----------------------------------------------


[HTML 입력양식요소]
1. 기능 : 데이터를 입력하고 전송할 수 있음.
            html파일(= 페이지, 문서)에서
            동일하거나 또는 다른 html페이지로
            데이터를 전달할 수 있다.

2. 관련요소
  1) form : 입력양식 요소들 중에서
               최상위 요소
  2) input, select, option, textarea :
      form의 하위요소로 실질적으로
      데이터를 입력하기 위한 요소
  3) 입력양식에 사용되는 보조 요소 : 
      fieldset, legend, button, label

3. 사용방법

   <form 속성>
       <input 속성>
       <select 속성>
           <option 속성></option>
       </select>
       <textarea 속성></textarea>
   </form>


4. <form> 요소
   1) 입력과 관련된 최상위요소
   2) 데이터를 전송할 필요가 없을 경우에는
       (즉, 레이아웃만 구현하는 경우)
       사용하지 않아도 됨.
   3) 관련 속성
      action="데이터를 전송할 URL
                 또는 파일명"
      method="데이터를 전송하는 방식"
      enctype="전송하는 데이터가 파일일 때'

<form action="join/sample.asp">
      전송된 데이터를 수신할 수 있는
      프로그램 또는 파일 종류
       => asp, aspx, jsp, php

<form method="post">
        post => 전송하는 데이터 숨김 방식
        get => 전송하는 데이터 노출 방식 


<form enctype="multipart/form-data">
        enctype="multipart/form-data"
        => 실제 파일을 전송할 수 있음
             보기. <input type="file">
             참고. 파일을 전송하고자 할 경우
                     method="post"만 가능함
                     get으로는 전송안됨.

-----------------------------------------
form 하위 요소들 input, select, option, textarea
=> 데이터입력에 직접적으로 관여하는 하위요소

input => 1줄입력(type="text"), 비밀번호입력, 
             라디오버튼, 체크박스버튼, 
             파일전송, 숨기기,
             실행버튼, 취소버튼, 그냥버튼...
select-option
textarea =>  넓은 영역의 텍스트 입력
                  (글내용, 자기소개, 상품후기, 리뷰..)


------------------------------------------------------------
      [ 특정 조건에 따른 코드 실행 방법 ]
        
        txt가   공백이라면 =>    if (txt == "") { 실행코드1 }
        txt 공백이 아니라면 =>  if (txt != "")  {  실행코드2 }
        
        1. $("span#closeMark").css({ "visibility": "visible" });
        
        2. $("span#closeMark").css({ "visibility": "hidden" });


      참고. 
       <input type="text">에서 공백확인하는 방법
       var txt = $("input").val( );

       ----------------------------------------

[입력된 한글, 영어 등의 제거]

1. 일반요소
       <div>내용</div>   => 요소의 내용(content)
 
      =>  $("div").text("");     <!-- 따옴표는 공백을 의미 -->

2. 입력양식요소
       <input type="text"> => 텍스트박스 입력 값(value)

       => $("input").val("");     <!-- 따옴표는 공백을 의미 -->

----------------------------------------------------


[입력양식 요소에서 입력된 값(value)이 공백인지 확인하는 방법]

$("input").val("");   => 텍스트박스 입력값을 공백으로 만들어 주세요.

$("input").val();   => 텍스트박스 입력값을 가져오세요


작업처리를 위한 내용이해
=> 클릭했을 때 
     텍스트박스의 입력값이 공백이라면
     경고창을 실행하세요.

참고.   공백 표기 => ""
         텍스트박스의 입력값이 공백과 같다의 표기법 =>   
         $("input#searchWord").val( )  ==   "" 

          OO의 XX 이라면  특정기능을 실행하세요
        => 텍스트박스의 값이 공백이라면
             경고창을 실행하세요

          if (      $("input#searchWord").val( )  ==   ""       )  {
           
               alert("안내할 내용");

         }
       



-------------------------------------------------------------------



[form요소에 전송을 담당하는 하위요소]
<input type="submit">
<input type="image">
<button type="submit">

만일 다른 요소를 사용하여 form요소에
적용되는 전송기능을 구현하려면
JS 또는 jQuery를 사용해야 함.


 jQuery에서 전송을 실행하는 코드


$("선택자").submit( );
단, 선택자는 form요소여야 함.

















